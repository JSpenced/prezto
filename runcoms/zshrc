# -*- mode: sh -*-
#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your
# unsetopt CORRECT                      # Disable autocorrect guesses. Happens when typing a wrong
					  # command that may look like an existing one.

expand-or-complete-with-dots() {      # This bunch of code displays red dots when autocompleting
  echo -n "\e[31m......\e[0m"         # a command with the tab key, "Oh-my-zsh"-style.
  zle expand-or-complete
  zle redisplay
}
zle -N expand-or-complete-with-dots
bindkey "^I" expand-or-complete-with-dots

#function f() { find . -iname "*$1*" ${@:2} }
#function r() { grep "$1" ${@:2} -R . }

setopt extended_glob
setopt ksh_glob

# system commands
alias duh="du -d 1"
alias du1="du -d 1"
alias due="du -L -d 1 -h 2>/dev/null"
alias duea="du -L -h 2>/dev/null"
alias dusa="du -L -h 2>/dev/null | gsort -h"
alias dus="du -L -d 1 -h 2>/dev/null | gsort -h"

# hub has all the features of git and more to view issues and submit PRs
alias git="hub"

# Even better: use the silver searcher (brew install the_silver_searcher)
alias fs="ag -g"
alias rs="ag"
alias ripgrep="rg"
alias su="subl"
alias sn="subl -n"
alias snw="subl -n -w"
alias sb="subl -n -b"
alias snb="subl -n -b"
# Default aliases for fasd already set but here for reference
# alias fa='fasd -a'        # any
# alias fs='fasd -si'       # show / search / select
alias j='fasd_cd -d'
alias jj='fasd_cd -d -i'
alias fd='fasd -d'        # directory
alias ff='fasd -f'        # file
alias fsd='fasd -sid'     # Interactive directory selection
alias fsf='fasd -sif'     # interactive file selection
alias z='fasd_cd -d'     # cd, same functionality as j in autojump
alias zz='fasd_cd -d -i' # cd with interactive selection
# unalias rm
alias rmi='rm -i'
alias rmr='rm -r'
alias rmrf='rm -r -f'
alias rmf='rm -r -f'
alias rmd='rm -r'
alias rmir='rm -i -r'
# Used to unalias to use the ghostscript command /usr/local/bin/gs
# unalias gs
# alias gst='git stash'

# Jupyter notebook alias and function
alias nbstripjq_all="jq --indent 1 \
	'(.cells[] | select(has(\"outputs\")) | .outputs) = []  \
	| (.cells[] | select(has(\"execution_count\")) | .execution_count) = null  \
	| .metadata = {\"language_info\": {\"name\": \"python\", \"pygments_lexer\": \"ipython3\"}} \
	| .cells[].metadata = {} \
	'"
function nbstrip_cwd {
	for nbfile in *.ipynb; do
	echo "$( nbstripjq_all $nbfile )" > $nbfile
	done
	unset nbfile
}
alias nbstripjq_metaonly="jq --indent 1 \
	'(.cells[] | select(has(\"execution_count\")) | .execution_count) = null  \
	| .metadata = {\"language_info\": {\"name\": \"python\", \"pygments_lexer\": \"ipython3\"}} \
	| .cells[].metadata = {} \
	'"
function nbstrip_cwd_metaonly {
	for nbfile in *.ipynb; do
	echo "$( nbstripjq_metaonly $nbfile )" > $nbfile
	done
	unset nbfile
}
alias jupn='jupyter notebook'
alias jn='jupyter notebook'
alias jnio='jupyter notebook --NotebookApp.iopub_data_rate_limit=10000000'
alias jupq='jupyter qtconsole --style monokai'
alias jupqt='jupyter qtconsole --style monokai'
alias jupqe='jupyter qtconsole --style monokai  --existing'
alias ipq='ipython qtconsole --style monokai'
alias ipqt='ipython qtconsole --style monokai'
alias ipqe='ipython qtconsole --style monokai  --existing'

# Other aliases
alias opar='open -a "Adobe Acrobat Reader DC"'
alias unm='diskutil unmountDisk /dev/disk2s1'
alias unmo='diskutil unmountDisk /dev/disk2s1'
alias unmount='diskutil unmountDisk'
alias unmountd='diskutil unmountDisk /dev/disk2s1'
alias kql='killall qlmanage'
alias netoff='networksetup -setairportpower en0 off'
alias neton='networksetup -setairportpower en0 on'
alias netoffon='networksetup -setairportpower en0 off; networksetup -setairportpower en0 on'
alias noo='networksetup -setairportpower en0 off; networksetup -setairportpower en0 on'
alias adp='adb push'
alias td='todo.sh'
alias tdp='export PATH=/usr/local/opt/ruby/bin:/usr/local/opt/openssl/bin:$PATH; todo.sh ice_recur -o'
alias tdr='export PATH=/usr/local/opt/ruby/bin:/usr/local/opt/openssl/bin:$PATH; todo.sh ice_recur -o'
alias tdrf='export PATH=/usr/local/opt/ruby/bin:/usr/local/opt/openssl/bin:$PATH; todo.sh ice_recur -o -f'
alias tdi='todo.sh ice_recur -o'
alias tdpf='export PATH=/usr/local/opt/ruby/bin:/usr/local/opt/openssl/bin:$PATH; todo.sh ice_recur -o -f'
alias tdf='todo.sh ice_recur -o -f'
alias tdice='todo.sh ice_recur'
alias sl='pmset sleepnow'
alias histr='fc -R'
alias histread='fc -R'
alias fcr='fc -R'
alias fcw='fc -W'
alias histw='fc -W'
alias histwrite='fc -W'
# alias sle='pmset sleepnow'
alias pms='pmset sleepnow'
alias getmyip='dig +short myip.opendns.com @resolver1.opendns.com'
alias preztoupdate='fasd_cd -d prezto && git fetch upstream && git rebase -Xours upstream/master && git checkout --ours zshconfig.sh && git add zshconfig.sh && git rebase --continue'

# How to write multiline commands if don't want to use alias
# tdicerecurtest () {
#     export PATH=/usr/local/opt/ruby/bin:/usr/local/opt/openssl/bin:$PATH
#     todo.sh ice_recur -o -f
# }

# File Type stats aliases
alias filetypestats="find . -type f | sed 's/.*\.//' | sort | uniq -c"
alias filestats="find . -type f | sed 's/.*\.//' | sort | uniq -c"
alias typestats="find . -type f | sed 's/.*\.//' | sort | uniq -c"

# Copy video files aliases
alias cpvidfiles='mkdir -p ${HOME}/Downloads/Videos && find . -type f \( -iname \*.avi -o -iname \*.mov -o -iname \*.mp4 -o -iname \*.mts -o -iname \*.mkv -o -iname \*.flv -o -iname \*.wmv \) -exec cp {} ${HOME}/Downloads/Videos \;'

# Trash aliases
alias trafe='trash -ey'
alias trae='trash -e'
alias tra='trash'

# Brew aliases
alias brewski='conda deactivate; brew update && brew upgrade && brew cleanup; brew doctor'

# Tmux aliases
alias tj='j Down && conda deactivate && tmux'
alias tmj='j Down && conda deactivate && tmux'
alias ta='tmux a'
alias tmd='tmux detach'

# conda aliases
alias cif='conda install -c conda-forge'
alias cic='conda install -c conda-forge'
alias cod='conda deactivate'
alias ca='conda activate'
alias coa='conda activate'
alias coi='conda install'
alias coc='conda create -n'
alias coif='conda install -c conda-forge'
alias cou='conda upgrade'
alias cls='conda info --envs'
alias caai='conda activate tf-ai'
alias coaai='conda activate tf-ai'
alias ci='conda install'

# GIT aliases
alias gcof='git checkout -f'
alias gche='git cherry-pick'
alias gwf='git status --ignore-submodules=${_git_status_ignore_submodules}'
alias gwsf='git status --ignore-submodules=${_git_status_ignore_submodules}'
alias gpristine='git reset --hard && git clean -df'
alias gpris='git reset --hard && git clean -df'
alias gdt='git difftool --ignore-space-at-eol --ignore-blank-lines -w -b'
alias gau='git add -u'
# Re-stage the currently staged files to get the most recent changes of those files
alias gars='git add $(git diff --name-only --cached)'
alias gas='git add $(git diff --name-only --cached)'

# alias ls='ls -G -h'
alias lh='ls -h -a'
# alias jupqte='jupyter qtconsole --style monokai --existing'

# RUN Programs
alias opf="open -a Finder"

# Emacs related
alias em="open -a Emacs"
alias emr="${HOME}/Dropbox/Programs/emacs/runEmacs"
alias emc="open -a Emacs"
alias emq="emacs -q"
alias emac="nohup emacs -q --no-desktop -l ${HOME}/Programs/scimax/init.el </dev/null >/dev/null 2>&1 &"
alias emacf="nohup emacs -q --no-desktop -l ${HOME}/Programs/scimax/init.el"
alias emacautosavefind="find . -iname '#*#' -type f -print"
alias emacautosavedel="find . -iname '#*#' -type f -delete"
alias emacsjmax="nohup emacs -q -l ${HOME}/Programs/scimax/init.el >/dev/null </dev/null >/dev/null 2>&1 &"
alias emacdel="find ${HOME}/.emacs_path_backups -mtime +180 -type f -delete"
alias emacbackprint="find ${HOME}/.emacs_path_backups -mtime +180 -type f -print"
alias emacbackdel="find ${HOME}/.emacs_path_backups -mtime +180 -type f -delete"
alias emacsrelinkdesk="cp ~/Programs/scimax/user/.emacs.desktop ~/Dropbox/Programs/emacs/user/.emacs.desktop && ln -sf ~/Dropbox/Programs/emacs/user/.emacs.desktop ~/Programs/scimax/user/.emacs.desktop"
alias emacsrmlock="rm ~/Programs/scimax/user/.emacs.desktop.lock"
alias emacsrmdesk="rm ~/Programs/scimax/user/.emacs.desktop || rm ~/Dropbox/Programs/emacs/user/.emacs.desktop"


# Mount hard drive (FUSE and unmount VBox)
alias fuse="sudo sh ${HOME}/Dropbox/Programs/system-scripts/turn_off_vbox_or_fuse.sh fuse"
alias mountntfs="sudo sh ${HOME}/Dropbox/Programs/system-scripts/turn_off_vbox_or_fuse.sh fuse && sudo /usr/local/bin/ntfs-3g /dev/disk2s1 /Volumes/ntfs -ovolname='ntfs'"
alias mountvbox="sudo sh ${HOME}/Dropbox/Programs/system-scripts/turn_off_vbox_or_fuse.sh vbox"

# Python aliases
alias pytabtospace="find . -name '*.py' -type f -exec bash -c 'T=$(mktemp); expand -t 8 \"\$0\" > \"\$T\" && mv \"\$T\" \"\$0\"' {} \;"

# Try to setup to expand aliases
expand-aliases() {
  unset 'functions[_expand-aliases]'
  functions[_expand-aliases]=$BUFFER
  (($+functions[_expand-aliases])) &&
	BUFFER=${functions[_expand-aliases]#$'\t'} &&
	CURSOR=$#BUFFER
}
zle -N expand-aliases
bindkey '\e^E' expand-aliases

# Treat these characters as part of a word.
WORDCHARS='*?[]~&;!#$%^(){}<>'

export SUBLIME=subl
export EDITOR=$SUBLIME' -w'
export VISUAL=$EDITOR
# export NVM_DIR="$HOME/.nvm"
# . "/usr/local/opt/nvm/nvm.sh"

# export PATH=${HOME}/anaconda/bin:${HOME}/bin:/usr/local/bin:/usr/local/share/python:$PATH:${HOME}/Dropbox/Programs/system-scripts
export PATH=$HOME/bin:/usr/local/bin:$PATH:$HOME/Dropbox/Programs/system-scripts
# export PYTHONPATH=$PYTHONPATH:$HOME/Google-dr/Research/Model
# export PATH=$HOME/bin:/usr/local/bin:/usr/local/share/python:$PATH:$HOME/Dropbox/Programs/system-scripts
source "${HOME}/.zshrc_hidden"

# export PYTHONPATH=/usr/local/lib/python2.7/site-packages:/usr/local/lib/python3.5/site-packages:$PYTHONPATH
# To get autojump working (replaced by fasd (brew install and added to plugins))
# [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh

eval "$(rbenv init -)"

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '${HOME}/Programs/google-cloud-sdk/path.zsh.inc' ]; then source '${HOME}/Programs/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '${HOME}/Programs/google-cloud-sdk/completion.zsh.inc' ]; then source '${HOME}/Programs/google-cloud-sdk/completion.zsh.inc'; fi

. ${HOME}/anaconda/etc/profile.d/conda.sh
conda activate tf-ai
